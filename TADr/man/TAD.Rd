% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/TAD.R
\name{TAD}
\alias{TAD}
\title{Topological Anomaly Detection.}
\usage{
TAD(dat, rq = 0.1, p = 0.1, knn = FALSE, k = 3, return_scores = TRUE,
  return_graph = FALSE, return_dist = FALSE, verbose = FALSE,
  rqSample = NULL)
}
\arguments{
\item{dat}{Input data, as a matrix or dataframe. Each row corresponds to a
unique observation, columns correspond to variables.}

\item{rq}{If not using the KNN method, this is the "graph resolution" as a
quantile of the observed inter-observation distances. Defaults to .1 (10%).}

\item{p}{The "background" threshold as a percentile of the number of
observations in the input data. Defaults to .1, i.e. observations in
connected components containing 10% or fewer of the dataset will be flagged
as outliers.}

\item{knn}{Boolean, whether or not to represent the data as a nearest-
neighbor graph (as opposed to a thresholded distance graph). Defaults to
FALSE, i.e. not using KNN method.}

\item{k}{If using KNN method, determines the number of neighbors considered
in constructing the nearest neighbors graph. Defaults to 3.}

\item{return_scores}{Boolean value that determines whether or not outleir
scores will be calculated and returned. If scores are not needed, setting
this parameter to FALSE will impart speed gains on the classification.
Defaults to TRUE.}

\item{return_graph}{Boolean value that determines whether or not to return
the graph representation of the data (as an igraph::graph object). Defaults
to FALSE.}

\item{return_dist}{Boolean value that determines whether or not to return the
inter-observation distance matrix (as a dist object). If knn=FALSE and
return_scores=FALSE this will require an additional separate calculation.
Defaults to FALSE.}

\item{verbose}{Boolean that determiens whether or not to run in "verbose"
mode. Defaults to FALSE.}

\item{rqSample}{If non-null and knn=FALSE, determines the max size of the
sample of inter-observation distances to be used to determine graph
resolution from the rq quantile parameter. If NULL, all distances are used.
Defaults to NULL.}
}
\value{
numeric vector giving number of characters in each element of the
  character vector.  Missing strings have missing length.
}
\description{
Topological Anomaly Detection.
}
\examples{
data(iris)
pca = prcomp(iris[,-5] ,center=TRUE, scale=TRUE)
colpal=colorRampPalette(c("yellow","red"))(10)

## Normal algorithm ##
tad = TAD(iris[,-5], return_graph=TRUE, verbose=TRUE, return_scores=TRUE)
g = tad$graph

# TAD-PCA plot
outl_discrete = ceiling(10*tad$scores/max(tad$scores))
V(g)$color=4
V(g)$color[tad$outliers] = colpal[outl_discrete]
V(g)$name[-tad$outliers] = ""
#V(g)$name[tad$outliers] = round(tad$scores,2)
par(mfrow=c(1,1))
plot(g, layout=pca$x[,1:2])
pairs(pca$x, col=V(g)$color, pch=16)

## KNN variant ##
tad = TAD(iris[,-5], knn=TRUE, k=5, p=.05, return_graph=TRUE, verbose=TRUE, rqSample=2250, return_dist=TRUE, return_scores=TRUE)
g = tad$graph

# TAD-PCA plot
outl_discrete = ceiling(10*tad$scores/max(tad$scores))
V(g)$color=3
V(g)$color[tad$outliers] = colpal[outl_discrete]
par(mfrow=c(1,1))
plot(g, layout=pca$x[,1:2])
pairs(pca$x, col=V(g)$color, pch=16)
}

